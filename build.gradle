plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
}

version = project.version
group = project.maven_group

repositories {
    // for TOP
    maven { url "https://maven.wispforest.io" }
    // for REI
    maven { url = "https://maven.shedaniel.me/" }
    // for modmenu
    maven { url = "https://maven.terraformersmc.com/" }
    // for config
    maven { url = "https://cursemaven.com" }
    maven { url = "https://maven.devos.community/snapshots/" }
    maven { url = "https://maven.devos.community/releases/" }
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }
    maven { url = "https://maven.terraformersmc.com/releases/" }
    maven { url = "https://ladysnake.jfrog.io/artifactory/mods" }
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://jitpack.io" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "mcjty.theoneprobe:theoneprobe-fabric:${project.top_version}"

    modCompileOnly "slimeknights.tconstruct:TConstruct:1.18.1-3.4.1.DEV.a4b9907"

    modCompileOnly "curse.maven:modern-industrialization-405388:3646911"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name

    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
